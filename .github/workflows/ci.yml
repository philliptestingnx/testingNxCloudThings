name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  actions: read
  contents: read

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Set up Node.js
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      # Step 3: Install dependencies
      - run: npm ci --legacy-peer-deps

      # Step 4: Get the affected projects
      - name: Get affected projects
        id: affected_projects
        run: |
          npx nx print-affected --target=e2e --select=projects > affected.txt
          echo "Affected Projects: $(cat affected.txt)"

      # Step 5: Start servers for affected projects
      - name: Start servers for affected projects
        run: |
          while IFS= read -r project; do
            echo "Starting server for $project"
            npx nx serve $project > $project-server.log 2>&1 &
          done < affected.txt

      # Step 6: Wait for the servers to be ready
      - name: Wait for servers
        run: |
          while IFS= read -r project; do
            echo "Waiting for $project server"
            npx wait-on http://localhost:4200 --timeout=40000 # Adjust the port if different for each project
          done < affected.txt

      # Step 7: Run E2E tests for affected projects
      - name: Run E2E tests for affected projects
        run: |
          while IFS= read -r project; do
            echo "Running E2E tests for $project"
            npx nx e2e $project --headless
          done < affected.txt

      # Step 8: Stop all servers
      - name: Stop all servers
        if: always()
        run: pkill -f "nx serve"
